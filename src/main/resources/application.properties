## ======= CONFIGURATION DE BASE =======
## Nom de l?application (visible dans Actuator, logs, etc.)
#spring.application.name=springmvc-thymeleaf-springdata
#
## ======= CONFIGURATION BASE DE DONNÉES =======
## URL de connexion à la base MySQL
## -> "springthymleaf" est le nom de la base (à créer manuellement si ddl-auto != create)
#spring.datasource.url=jdbc:mysql://localhost:3306/springthymleaf
#
## Identifiants MySQL
#spring.datasource.username=root
#spring.datasource.password=
#
## Driver JDBC MySQL (nécessaire pour Spring Boot < 3.x ; sinon détecté automatiquement)
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
## ======= CONFIGURATION JPA / HIBERNATE =======
## ddl-auto : gestion automatique du schéma de la base
## - none  : ne touche pas à la structure
## - validate : vérifie que les tables existent déjà
## - update : met à jour le schéma
## - create : recrée la DB à chaque lancement
## - create-drop : idem que create, mais drop à la fin
#spring.jpa.hibernate.ddl-auto=update
#
## Afficher les requêtes SQL dans la console (pratique pour debug)
#spring.jpa.show-sql=true
#
## Dialecte Hibernate adapté à MySQL 8
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#
## ======= CONFIGURATION THYMELEAF =======
## Désactiver le cache Thymeleaf (utile en développement pour voir les changements en direct)
#spring.thymeleaf.cache=false

spring.application.name=springmvc-thymeleaf-springdata

# Pointe vers MySQL du docker-compose (hostname: db)
spring.datasource.url=jdbc:mysql://db:3306/springthymleaf?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
# mot de passe fourni par les variables d'environnement (SPRING_DATASOURCE_PASSWORD)
spring.datasource.password=

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.thymeleaf.cache=false
